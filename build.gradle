buildscript {
	repositories {
		maven { url = 'https://repo.spongepowered.org/maven' }
	}

	dependencies {
		classpath 'org.spongepowered:mixingradle:0.7.+'
	}
}

plugins {
	id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
	mappings channel: 'official', version: minecraft_version

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'auditory'

			mods {
				auditory {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'auditory'

			mods {
				auditory {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', 'auditory'

			mods {
				auditory {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			args '--mod', 'auditory', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				auditory {
					source sourceSets.main
				}
			}
		}
	}
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {

	// To change the versions see the gradle.properties file
	minecraft "net.minecraftforge:forge:${minecraft_version}-${loader_version}"
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

	implementation(fg.deobf("curse.maven:cloth-config-348521:${cloth_version}"))
	implementation(fg.deobf("curse.maven:configured-457570:${configured_version}"))
}

mixin {
	add sourceSets.main, "auditory.refmap.json"
	config "auditory.mixins.json"
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
	manifest {
		attributes([
				"Specification-Title"     : "auditory",
				"Specification-Vendor"    : "Sydokiddo",
				"Specification-Version"   : "1", // We are version 1 of ourselves
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "Sydokiddo",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}